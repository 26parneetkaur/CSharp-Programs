@model SqlEntities.Entities.Student

@{
    ViewData["Title"] = "AddStudents";
}

<h1>AddStudents</h1>

<h4>Student</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="AddStudents">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<div class="form-group">
                <label asp-for="StudentId" class="control-label"></label>
                <input asp-for="StudentId" class="form-control" />
                <span asp-validation-for="StudentId" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="StudentFirstName" class="control-label"></label>
                <input asp-for="StudentFirstName" class="form-control" />
                <span asp-validation-for="StudentFirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentLastName" class="control-label"></label>
                <input asp-for="StudentLastName" class="form-control" />
                <span asp-validation-for="StudentLastName" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label asp-for="StudentGender" class="control-label"></label>
                <input asp-for="StudentGender" class="form-control" />
                <span asp-validation-for="StudentGender" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label>Student-Gender</label><br />
                @Html.ValidationMessageFor(x => x.StudentGender, "", new { @class = "error" })
                Male:@Html.RadioButtonFor(x => x.StudentGender, "Male")
                Female:@Html.RadioButtonFor(x => x.StudentGender, "Female")
            </div>
            <div class="form-group">
                <label asp-for="StudentDob" class="control-label"></label>
                <input asp-for="StudentDob" class="form-control" />
                <span asp-validation-for="StudentDob" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentAge" class="control-label"></label>
                <input asp-for="StudentAge" class="form-control" />
                <span asp-validation-for="StudentAge" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="State" class="control-label"></label>
                <input asp-for="State" class="form-control" />
                <span asp-validation-for="State" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">College Name</label><br />
                <select id="CollegeId" name="CollegeId" class="dropdown">
                    @foreach (var item in ViewBag.College)
                    {
                        <option class="dropdown-item" value="@item.CollegeId">@item.CollegeName</option>
                    }
                </select>
                <span asp-validation-for="CollegeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Teacher Name</label><br />
                <select id="CollegeId" name="TeacherId" class="dropdown">
                    @foreach (var item in ViewBag.Teacher)
                    {
                        <option class="dropdown-item" value="@item.TeacherId">@item.TeacherName</option>
                    }
                </select>
                <span asp-validation-for="TeacherId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="FetchStudents">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
